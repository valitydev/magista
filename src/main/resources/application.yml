server:
  port: ${server.port}

spring:
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    driver-class-name: org.postgresql.Driver
    url: ${db.url}
    username: ${db.user}
    password: ${db.password}
    hikari:
      maximum-pool-size: 3
      idle-timeout: 30000
      data-source-properties:
        reWriteBatchedInserts: true
  application:
    name: ${project.name}
  flyway:
    schemas: mst
  kafka:
    bootstrap-servers: kafka:9092
    client-id: magista
    consumer:
      group-id: magista-group-1
      properties:
        max.poll.interval.ms: 60000
        session.timeout.ms: 60000
  threads:
    virtual:
      enabled: true

retry-policy:
  maxAttempts: -1

cache:
  invoiceData:
    size: 10000
  paymentData:
    size: 10000

info:
  damsel:
    version: ${damsel.version}

management:
  server:
    port: ${management.port}
  metrics:
    tags:
      application: ${project.name}
  endpoint:
    health:
      probes:
        enabled: true
      show-details: always
    metrics:
      enabled: true
    prometheus:
      enabled: true
  endpoints:
    web:
      exposure:
        include: health,info,prometheus
  prometheus:
    metrics:
      export:
        enabled: false

service:
  partyManagement:
    url: http://hellgate:8022/v1/processing/partymgmt
    networkTimeout: 5000
  invoiceTemplating:
    url: http://hellgate:8022/v1/processing/invoice_templating
    networkTimeout: 5000

kafka:
  consumer:
    throttling-timeout-ms: 1000
  topics:
    invoicing:
      id: mg-invoice-100-2
      consume:
        enabled: false
        max-poll-records: 500
        concurrency: 1
    invoice-template:
      id: mg-events-invoice-template
      consume:
        enabled: false
        max-poll-records: 50
        concurrency: 1

token-gen:
  key: jXnZr4u7x!A%D*G-KaPvSgVkYp3s5v8t/B?E(H+MbQeThWmZq4t7w9z$C&F)J@Nc

testcontainers:
  postgresql:
    tag: '17.4'
  kafka:
    tag: '6.2.0'
